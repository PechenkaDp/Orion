# Generated by Django 5.1.7 on 2025-03-29 19:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('document_type', models.CharField(max_length=100, verbose_name='Тип документа')),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/', verbose_name='Файл')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('publish_date', models.DateField(blank=True, null=True, verbose_name='Дата публикации')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='Дата вступления в силу')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания срока действия')),
                ('version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Версия')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Автор')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Hazard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('category', models.CharField(max_length=100, verbose_name='Категория')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Опасность',
                'verbose_name_plural': 'Опасности',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InstructionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('period_days', models.IntegerField(blank=True, null=True, verbose_name='Периодичность (дни)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тип инструктажа',
                'verbose_name_plural': 'Типы инструктажей',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PPEItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('category', models.CharField(max_length=100, verbose_name='Категория')),
                ('standard_issue_period', models.IntegerField(blank=True, null=True, verbose_name='Стандартный период выдачи (дни)')),
                ('certification_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер сертификата')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('supplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Поставщик')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'СИЗ',
                'verbose_name_plural': 'СИЗ',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.department', verbose_name='Родительское подразделение')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('safety_specialist', 'Специалист по охране труда'), ('department_head', 'Руководитель подразделения'), ('employee', 'Сотрудник'), ('medical_worker', 'Медицинский работник'), ('technician', 'Техник')], default='employee', max_length=50, verbose_name='Роль')),
                ('hire_date', models.DateField(verbose_name='Дата приема на работу')),
                ('medical_exam_date', models.DateField(blank=True, null=True, verbose_name='Дата последнего медосмотра')),
                ('next_medical_exam_date', models.DateField(blank=True, null=True, verbose_name='Дата следующего медосмотра')),
                ('personal_id_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Табельный номер')),
                ('emergency_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Экстренный контакт')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='core.department', verbose_name='Подразделение')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('equipment_type', models.CharField(max_length=100, verbose_name='Тип оборудования')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Серийный номер')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Дата приобретения')),
                ('warranty_expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания гарантии')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Местоположение')),
                ('status', models.CharField(choices=[('operational', 'Исправно'), ('requires_maintenance', 'Требуется обслуживание'), ('under_maintenance', 'На обслуживании'), ('decommissioned', 'Выведено из эксплуатации')], default='operational', max_length=20, verbose_name='Статус')),
                ('last_maintenance_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата последнего обслуживания')),
                ('next_maintenance_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата следующего обслуживания')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipment', to='core.department', verbose_name='Подразделение')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_equipment', to='core.employee', verbose_name='Ответственное лицо')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(max_length=100, verbose_name='Тип обслуживания')),
                ('maintenance_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата обслуживания')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание работ')),
                ('result', models.CharField(max_length=100, verbose_name='Результат')),
                ('next_maintenance_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата следующего обслуживания')),
                ('documents_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь к документам')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='core.equipment', verbose_name='Оборудование')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_maintenance', to=settings.AUTH_USER_MODEL, verbose_name='Выполнил')),
            ],
            options={
                'verbose_name': 'Обслуживание оборудования',
                'verbose_name_plural': 'Обслуживание оборудования',
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('incident_type', models.CharField(max_length=100, verbose_name='Тип происшествия')),
                ('location', models.CharField(max_length=255, verbose_name='Место происшествия')),
                ('incident_date', models.DateTimeField(verbose_name='Дата происшествия')),
                ('report_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата сообщения')),
                ('description', models.TextField(verbose_name='Описание')),
                ('severity', models.CharField(max_length=50, verbose_name='Тяжесть')),
                ('immediate_actions', models.TextField(blank=True, null=True, verbose_name='Первоначальные действия')),
                ('investigation_status', models.CharField(default='pending', max_length=50, verbose_name='Статус расследования')),
                ('root_cause', models.TextField(blank=True, null=True, verbose_name='Корневая причина')),
                ('preventive_measures', models.TextField(blank=True, null=True, verbose_name='Превентивные меры')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='core.department', verbose_name='Подразделение')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_incidents', to=settings.AUTH_USER_MODEL, verbose_name='Сообщил')),
            ],
            options={
                'verbose_name': 'Происшествие',
                'verbose_name_plural': 'Происшествия',
                'ordering': ['-incident_date'],
            },
        ),
        migrations.CreateModel(
            name='IncidentVictim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('injury_description', models.TextField(blank=True, null=True, verbose_name='Описание травмы')),
                ('medical_assistance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Медицинская помощь')),
                ('work_days_lost', models.IntegerField(default=0, verbose_name='Потерянные рабочие дни')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_involvements', to='core.employee', verbose_name='Сотрудник')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='victims', to='core.incident', verbose_name='Происшествие')),
            ],
            options={
                'verbose_name': 'Пострадавший',
                'verbose_name_plural': 'Пострадавшие',
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('inspection_type', models.CharField(max_length=100, verbose_name='Тип проверки')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('completed', 'Выполнено'), ('canceled', 'Отменено')], default='new', max_length=20, verbose_name='Статус')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('result', models.TextField(blank=True, null=True, verbose_name='Результат')),
                ('report_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь к отчету')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspections', to='core.department', verbose_name='Подразделение')),
                ('lead_inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_inspections', to=settings.AUTH_USER_MODEL, verbose_name='Главный проверяющий')),
            ],
            options={
                'verbose_name': 'Проверка',
                'verbose_name_plural': 'Проверки',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='InspectionFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание нарушения')),
                ('severity', models.CharField(max_length=50, verbose_name='Тяжесть')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Местоположение')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок устранения')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('completed', 'Выполнено'), ('canceled', 'Отменено')], default='new', max_length=20, verbose_name='Статус')),
                ('resolution', models.TextField(blank=True, null=True, verbose_name='Решение')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата устранения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='core.inspection', verbose_name='Проверка')),
                ('responsible_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_findings', to='core.department', verbose_name='Ответственное подразделение')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_findings', to=settings.AUTH_USER_MODEL, verbose_name='Проверил')),
            ],
            options={
                'verbose_name': 'Нарушение',
                'verbose_name_plural': 'Нарушения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата проведения')),
                ('next_instruction_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата следующего инструктажа')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место проведения')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Продолжительность (минуты)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instructions', to='core.department', verbose_name='Подразделение')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_instructions', to=settings.AUTH_USER_MODEL, verbose_name='Инструктор')),
                ('instruction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='core.instructiontype', verbose_name='Тип инструктажа')),
            ],
            options={
                'verbose_name': 'Инструктаж',
                'verbose_name_plural': 'Инструктажи',
                'ordering': ['-instruction_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(verbose_name='Дата осмотра')),
                ('next_exam_date', models.DateField(verbose_name='Дата следующего осмотра')),
                ('exam_type', models.CharField(max_length=100, verbose_name='Тип осмотра')),
                ('medical_facility', models.CharField(max_length=255, verbose_name='Медицинское учреждение')),
                ('doctor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Врач')),
                ('result', models.CharField(max_length=50, verbose_name='Результат')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Рекомендации')),
                ('restrictions', models.TextField(blank=True, null=True, verbose_name='Ограничения')),
                ('document', models.FileField(blank=True, null=True, upload_to='medical_docs/', verbose_name='Документ')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_exams', to='core.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Медицинский осмотр',
                'verbose_name_plural': 'Медицинские осмотры',
                'ordering': ['-exam_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('notification_type', models.CharField(max_length=50, verbose_name='Тип уведомления')),
                ('related_entity_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип связанной сущности')),
                ('related_entity_id', models.IntegerField(blank=True, null=True, verbose_name='ID связанной сущности')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PPERequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество')),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата заявки')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('completed', 'Выполнено'), ('canceled', 'Отменено')], default='new', max_length=20, verbose_name='Статус')),
                ('processed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата обработки')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ppe_requests', to='core.employee', verbose_name='Сотрудник')),
                ('ppe_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='core.ppeitem', verbose_name='СИЗ')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_ppe_requests', to=settings.AUTH_USER_MODEL, verbose_name='Обработал')),
            ],
            options={
                'verbose_name': 'Заявка на СИЗ',
                'verbose_name_plural': 'Заявки на СИЗ',
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='PPEIssuance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество')),
                ('issue_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата выдачи')),
                ('expected_return_date', models.DateTimeField(blank=True, null=True, verbose_name='Ожидаемая дата возврата')),
                ('actual_return_date', models.DateTimeField(blank=True, null=True, verbose_name='Фактическая дата возврата')),
                ('condition_on_issue', models.TextField(blank=True, null=True, verbose_name='Состояние при выдаче')),
                ('condition_on_return', models.TextField(blank=True, null=True, verbose_name='Состояние при возврате')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ppe_issuances', to='core.employee', verbose_name='Сотрудник')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_ppe', to=settings.AUTH_USER_MODEL, verbose_name='Выдал')),
                ('ppe_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='core.ppeitem', verbose_name='СИЗ')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issuances', to='core.pperequest', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Выдача СИЗ',
                'verbose_name_plural': 'Выдачи СИЗ',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Местоположение')),
                ('level', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], max_length=20, verbose_name='Уровень риска')),
                ('probability', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Вероятность (0-1)')),
                ('severity', models.IntegerField(verbose_name='Тяжесть последствий (1-10)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('evaluation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата оценки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks', to='core.department', verbose_name='Подразделение')),
                ('evaluated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluated_risks', to=settings.AUTH_USER_MODEL, verbose_name='Оценил')),
                ('hazard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='core.hazard', verbose_name='Опасность')),
            ],
            options={
                'verbose_name': 'Риск',
                'verbose_name_plural': 'Риски',
                'ordering': ['-evaluation_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskMitigationMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание мероприятия')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('completed', 'Выполнено'), ('canceled', 'Отменено')], default='new', max_length=20, verbose_name='Статус')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('effectiveness_rating', models.IntegerField(blank=True, null=True, verbose_name='Оценка эффективности (1-10)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('responsible_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_mitigation_tasks', to='core.employee', verbose_name='Ответственный')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mitigation_measures', to='core.risk', verbose_name='Риск')),
            ],
            options={
                'verbose_name': 'Мероприятие по снижению риска',
                'verbose_name_plural': 'Мероприятия по снижению рисков',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SafetyTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('task_type', models.CharField(max_length=100, verbose_name='Тип задачи')),
                ('priority', models.CharField(default='medium', max_length=50, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('completed', 'Выполнено'), ('canceled', 'Отменено')], default='new', max_length=20, verbose_name='Статус')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_safety_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Назначил')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_safety_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Назначено')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='safety_tasks', to='core.department', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Задача по охране труда',
                'verbose_name_plural': 'Задачи по охране труда',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255, verbose_name='Действие')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User-Agent')),
                ('details', models.JSONField(blank=True, null=True, verbose_name='Детали')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог пользователя',
                'verbose_name_plural': 'Логи пользователей',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WorkplaceAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workplace_name', models.CharField(max_length=255, verbose_name='Название рабочего места')),
                ('assessment_date', models.DateField(verbose_name='Дата оценки')),
                ('next_assessment_date', models.DateField(verbose_name='Дата следующей оценки')),
                ('assessor', models.CharField(max_length=255, verbose_name='Оценщик')),
                ('result', models.CharField(max_length=50, verbose_name='Результат')),
                ('hazard_class', models.IntegerField(verbose_name='Класс вредности (1-4)')),
                ('report_number', models.CharField(max_length=100, verbose_name='Номер отчета')),
                ('report_file', models.FileField(blank=True, null=True, upload_to='souf_reports/', verbose_name='Файл отчета')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workplace_assessments', to='core.department', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'СОУТ',
                'verbose_name_plural': 'СОУТ',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='InstructionParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='attended', max_length=50, verbose_name='Статус')),
                ('test_result', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Результат проверки знаний')),
                ('signature_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Путь к файлу с подписью')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruction_participations', to='core.employee', verbose_name='Сотрудник')),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='core.instruction', verbose_name='Инструктаж')),
            ],
            options={
                'verbose_name': 'Участник инструктажа',
                'verbose_name_plural': 'Участники инструктажей',
                'unique_together': {('instruction', 'employee')},
            },
        ),
    ]
